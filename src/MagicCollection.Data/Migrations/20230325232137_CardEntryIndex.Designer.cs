// <auto-generated />
using System;
using MagicCollection.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MagicCollection.Data.Migrations
{
    [DbContext(typeof(MagicCollectionContext))]
    [Migration("20230325232137_CardEntryIndex")]
    partial class CardEntryIndex
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MagicCollection.Data.Entities.Bin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Label")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("label");

                    b.Property<int>("Ordinal")
                        .HasColumnType("integer")
                        .HasColumnName("ordinal");

                    b.HasKey("Id")
                        .HasName("pk_bins");

                    b.ToTable("bins", (string)null);
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_cards");

                    b.ToTable("cards", (string)null);
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.CardEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("LanguageIdentifier")
                        .IsRequired()
                        .HasColumnType("character varying(4)")
                        .HasColumnName("language_identifier");

                    b.Property<Guid>("PrintId")
                        .HasColumnType("uuid")
                        .HasColumnName("print_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uuid")
                        .HasColumnName("section_id");

                    b.Property<string>("TreatmentIdentifier")
                        .IsRequired()
                        .HasColumnType("character varying(16)")
                        .HasColumnName("treatment_identifier");

                    b.HasKey("Id")
                        .HasName("pk_card_entries");

                    b.HasIndex("LanguageIdentifier")
                        .HasDatabaseName("ix_card_entries_language_identifier");

                    b.HasIndex("SectionId")
                        .HasDatabaseName("ix_card_entries_section_id");

                    b.HasIndex("TreatmentIdentifier")
                        .HasDatabaseName("ix_card_entries_treatment_identifier");

                    b.HasIndex("PrintId", "TreatmentIdentifier", "LanguageIdentifier", "SectionId")
                        .IsUnique()
                        .HasDatabaseName("ix_card_entries_print_id_treatment_identifier_language_identif");

                    b.ToTable("card_entries", (string)null);
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.Edition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("code");

                    b.Property<DateOnly>("DateReleased")
                        .HasColumnType("date")
                        .HasColumnName("date_released");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_editions");

                    b.ToTable("editions", (string)null);
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.Language", b =>
                {
                    b.Property<string>("Identifier")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("identifier");

                    b.Property<string>("Label")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("label");

                    b.HasKey("Identifier")
                        .HasName("pk_languages");

                    b.ToTable("languages", (string)null);
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.Print", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CardId")
                        .HasColumnType("uuid")
                        .HasColumnName("card_id");

                    b.Property<string>("CollectorNumber")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("collector_number");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_updated");

                    b.Property<string>("DefaultLanguageIdentifier")
                        .IsRequired()
                        .HasColumnType("character varying(4)")
                        .HasColumnName("default_language_identifier");

                    b.Property<Guid>("EditionId")
                        .HasColumnType("uuid")
                        .HasColumnName("edition_id");

                    b.Property<string>("RarityIdentifier")
                        .IsRequired()
                        .HasColumnType("character varying(16)")
                        .HasColumnName("rarity_identifier");

                    b.Property<string>("ScryfallImageUri")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("scryfall_image_uri");

                    b.Property<string>("ScryfallUri")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("scryfall_uri");

                    b.HasKey("Id")
                        .HasName("pk_prints");

                    b.HasIndex("CardId")
                        .HasDatabaseName("ix_prints_card_id");

                    b.HasIndex("DefaultLanguageIdentifier")
                        .HasDatabaseName("ix_prints_default_language_identifier");

                    b.HasIndex("EditionId")
                        .HasDatabaseName("ix_prints_edition_id");

                    b.HasIndex("RarityIdentifier")
                        .HasDatabaseName("ix_prints_rarity_identifier");

                    b.ToTable("prints", (string)null);
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.PrintTreatment", b =>
                {
                    b.Property<Guid>("PrintId")
                        .HasColumnType("uuid")
                        .HasColumnName("print_id");

                    b.Property<string>("TreatmentId")
                        .HasColumnType("character varying(16)")
                        .HasColumnName("treatment_id");

                    b.Property<decimal?>("Usd")
                        .HasColumnType("money")
                        .HasColumnName("usd");

                    b.HasKey("PrintId", "TreatmentId")
                        .HasName("pk_print_treatment");

                    b.HasIndex("TreatmentId")
                        .HasDatabaseName("ix_print_treatment_treatment_id");

                    b.ToTable("print_treatment", (string)null);
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.Rarity", b =>
                {
                    b.Property<string>("Identifier")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("identifier");

                    b.Property<string>("Label")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("label");

                    b.Property<int>("Ordinal")
                        .HasColumnType("integer")
                        .HasColumnName("ordinal");

                    b.HasKey("Identifier")
                        .HasName("pk_rarities");

                    b.ToTable("rarities", (string)null);
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("BinId")
                        .HasColumnType("uuid")
                        .HasColumnName("bin_id");

                    b.Property<string>("Label")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("label");

                    b.Property<int>("Ordinal")
                        .HasColumnType("integer")
                        .HasColumnName("ordinal");

                    b.HasKey("Id")
                        .HasName("pk_sections");

                    b.HasIndex("BinId")
                        .HasDatabaseName("ix_sections_bin_id");

                    b.ToTable("sections", (string)null);
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.Treatment", b =>
                {
                    b.Property<string>("Identifier")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("identifier");

                    b.Property<string>("Label")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("label");

                    b.HasKey("Identifier")
                        .HasName("pk_treatments");

                    b.ToTable("treatments", (string)null);
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.CardEntry", b =>
                {
                    b.HasOne("MagicCollection.Data.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_card_entries_languages_language_identifier");

                    b.HasOne("MagicCollection.Data.Entities.Print", "Print")
                        .WithMany()
                        .HasForeignKey("PrintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_card_entries_prints_print_id");

                    b.HasOne("MagicCollection.Data.Entities.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_card_entries_sections_section_id");

                    b.HasOne("MagicCollection.Data.Entities.Treatment", "Treatment")
                        .WithMany()
                        .HasForeignKey("TreatmentIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_card_entries_treatments_treatment_identifier");

                    b.Navigation("Language");

                    b.Navigation("Print");

                    b.Navigation("Section");

                    b.Navigation("Treatment");
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.Print", b =>
                {
                    b.HasOne("MagicCollection.Data.Entities.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_prints_cards_card_id");

                    b.HasOne("MagicCollection.Data.Entities.Language", "DefaultLanguage")
                        .WithMany()
                        .HasForeignKey("DefaultLanguageIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_prints_languages_default_language_identifier");

                    b.HasOne("MagicCollection.Data.Entities.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_prints_editions_edition_id");

                    b.HasOne("MagicCollection.Data.Entities.Rarity", "Rarity")
                        .WithMany()
                        .HasForeignKey("RarityIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_prints_rarities_rarity_temp_id");

                    b.Navigation("Card");

                    b.Navigation("DefaultLanguage");

                    b.Navigation("Edition");

                    b.Navigation("Rarity");
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.PrintTreatment", b =>
                {
                    b.HasOne("MagicCollection.Data.Entities.Print", "Print")
                        .WithMany("AvailableTreatments")
                        .HasForeignKey("PrintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_print_treatment_prints_print_id");

                    b.HasOne("MagicCollection.Data.Entities.Treatment", "Treatment")
                        .WithMany()
                        .HasForeignKey("TreatmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_print_treatment_treatments_treatment_id");

                    b.Navigation("Print");

                    b.Navigation("Treatment");
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.Section", b =>
                {
                    b.HasOne("MagicCollection.Data.Entities.Bin", "Bin")
                        .WithMany("Sections")
                        .HasForeignKey("BinId")
                        .HasConstraintName("fk_sections_bins_bin_id");

                    b.Navigation("Bin");
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.Bin", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("MagicCollection.Data.Entities.Print", b =>
                {
                    b.Navigation("AvailableTreatments");
                });
#pragma warning restore 612, 618
        }
    }
}
